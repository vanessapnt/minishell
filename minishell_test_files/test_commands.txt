# This file contains the commands to be tested in minishell.
# Add one command per line.
# Lines starting with # are comments and will be ignored. Empty lines will be ignored.

# The file is named test_commands.txt, the script checks for its name so do not rename it.
# Adding 'remove' as the last line will make the script remove it after it is done running.
# Otherwise, the file will remain in the working directory and can be editted at will between runs.

# The script will NOT remove any files your minishell has created unless specified in the cleanup() function. By default, it will try to rm output1.txt up to output4.txt.

# The script does not handle commands that expect errors to be printed as error messages are typically custom.
# The script will run once you exit vim.

# Example commands:
echo "Hello, World!"
echo Hello World
echo $USER
echo $HOME
echo "This is a test"
echo 'This is a test'
echo $HOME
echo "$HOME is the home directory"
echo '$HOME is the home directory'
echo "Hello, World!" | tr '[:lower:]' '[:upper:]'
ls | grep minishell
cat Makefile | grep SRC | wc -l
echo $? + $?
echo "SPACES ARE COOL                      "
echo "very"'annoying' quotes!
echo "EVEN MORE ANNOYING $HOMECOUCOU'$HOME'"'$HOME'"$"HOME"$HOME"
echo "MORE MORE MORE "$DISPLAY$HOME" $? "HOME" $ $ $HOMECOUCOU'$HOME'"'$HOME'"$"HOME"$HOME"
ls > output2.txt > output3.txt > output4.txt > /dev/stdout
cat output2.txt
cat output3.txt
cat output4.txt
< Makefile < src/main.c ls > output2.txt -a > output4.txt
cat output4.txt
cat /etc/passwd | wc -l
ls -l | grep minishell | wc -l
echo "Hello, World!" > output.txt
cat output.txt
cat < output.txt
echo "Appending to file" >> output.txt
cat output.txt
ls -la
pwd
echo $
echo $:
echo $:====
echo $HOME
echo $9HOME
echo $::":"$":"
echo ""'$HOME'
echo "$HOME"
echo $'WOW'
echo "$"awooga""
echo "$notreal" $HOME
echo "$notreal""wow"
echo $LESS$VAR
unset ++++++
expr $? + $?
ls | exit
echo '$notreal'
echo "":$::::????"$HOME"
echo "simple string with no worries"
echo simple string with no worries
echo $VAR:$:$VAR::$:
echo "$HOME$PATH:${UNSET:-default}"
echo '$HOME'"$HOME"'$HOME'
echo ::::???'''""$PATH""'''????::::
echo $HOME::::$USER::::$PATH
echo $VAR:$VAR::"$VAR"::$VAR
echo $1 $2 $3 $@ $*
echo ${#HOME} ${HOME#/} ${HOME%/}
echo $+
echo $-
echo $`
echo $~
